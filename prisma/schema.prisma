// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  password     String?
  name         String
  email        String    @unique
  profileImage String
  phoneNumber  String?   @unique
  height       Float?
  age          Int?
  description  String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  ChatRooms    ChatRoom? @relation(fields: [chatRoomId], references: [id])
  chatRoomId   Int?
  Messages     Message[]
  //social login
  googleId     String?   @unique
  naverId      String?   @unique
  kakaoId      String?   @unique
  likes        Like[]    @relation("UserLikes")
  likedBy      Like[]    @relation("UserLikedBy")
}

model ChatRoom {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  messages  Message[]
}

model Message {
  id         Int       @id @default(autoincrement())
  content    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  chatRoom   ChatRoom? @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)
  chatRoomId Int
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
}

model Like {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation("UserLikes", fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  targetUser   User     @relation("UserLikedBy", fields: [targetUserId], references: [id], onDelete: Cascade)
  targetUserId Int

  @@unique([userId, targetUserId])
}
